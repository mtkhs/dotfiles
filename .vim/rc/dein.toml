[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'aereal/vim-colors-japanesque'
hook_add = '''
au MyAutoCmd VimEnter * nested colorscheme japanesque
'''

[[plugins]]
repo = 'ryanoasis/vim-devicons'
hook_add = '''
" vim-devicons
let g:webdevicons_conceal_nerdtree_brackets = 1
let g:WebDevIconsNerdTreeAfterGlyphPadding = ' '

" dir-icons
let g:WebDevIconsUnicodeDecorateFolderNodes = 1
let g:DevIconsEnableFoldersOpenClose = 1
let g:WebDevIconsUnicodeDecorateFolderNodesDefaultSymbol = ''
let g:DevIconsDefaultFolderOpenSymbol = ''
" file-icons
let g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols = {}
let g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols['html'] = ''
let g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols['css'] = ''
let g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols['md'] = ''
let g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols['txt'] = ''
'''

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim', 'vim-textobj-user']
hook_add = '''
let g:context_filetype#filetypes = {
      \ 'sh': [
      \   {
      \    'start': '[^<]<<\([\\''"]\?\)\([a-zA-Z0-9]\+\)\1$',
      \    'end': '^\2$', 'filetype': '\2',
      \   },
      \ ],
      \}"}}}
'''

[[plugins]] # for <Plug>(textobj-precious-i) in vim-precious
repo = 'kana/vim-textobj-user'

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
let g:NERDTreeDirArrows = 1
let NERDTreeWinSize=22
"let g:NERDTreeDirArrowExpandable = '+'
"let g:NERDTreeDirArrowCollapsible = '~'
'''

[[plugins]]
repo = 'tiagofumo/vim-nerdtree-syntax-highlight'
hook_add = '''
let s:rspec_red = 'FE405F'
let s:git_orange = 'F54D27'
let g:NERDTreeExactMatchHighlightColor = {} " this line is needed to avoid error
let g:NERDTreeExactMatchHighlightColor['.gitignore'] = s:git_orange " sets the color for .gitignore files
let g:NERDTreePatternMatchHighlightColor = {} " this line is needed to avoid error
let g:NERDTreePatternMatchHighlightColor['.*_spec\.rb$'] = s:rspec_red " sets the color for files ending with _spec.rb
'''

[[plugins]]
repo = 'delphinus/lightline-delphinus'
hook_add = '''
let g:lightline_delphinus_colorscheme='solarized_improved'
let g:ale_echo_msg_error_str = nr2char(0xf421) . ' '
let g:ale_echo_msg_warning_str = nr2char(0xf420) . ' '
let g:ale_echo_msg_info_str = nr2char(0xf05a) . ' '
let g:ale_echo_msg_format = '%severity%  %linter% - %s'
let g:ale_sign_column_always = 1
let g:ale_sign_error = g:ale_echo_msg_error_str
let g:ale_sign_warning = g:ale_echo_msg_warning_str
let g:ale_statusline_format = [
    \ g:ale_echo_msg_error_str . ' %d',
    \ g:ale_echo_msg_warning_str . ' %d',
    \ nr2char(0xf4a1) . '  '
\ ]
'''

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
let g:lightline = {
    \ 'active': {
        \ 'left': [ ['mode', 'paste'], ['readonly', 'filepath', 'modified'] ]
    \ }
\ }
'''

[[plugins]]
repo = 'w0rp/ale'

[[plugins]]
repo = 'majutsushi/tagbar'
hook_add = '''
let g:tagbar_ctags_bin = '/usr/local/bin/ctags'
let g:tagbar_width = 26
let g:tagbar_type_markdown = {
    \ 'ctagstype' : 'markdown',
    \ 'kinds' : [
        \ 'h:Heading_L1',
        \ 'i:Heading_L2',
        \ 'k:Heading_L3'
    \ ]
\ }
'''

[[plugins]]
repo = 'Shougo/neomru.vim'

[[plugins]]
repo = 'Shougo/denite.nvim'
if = 'has("nvim")'
on_cmd = 'Denite'
depends = ['neomru.vim']

[[plugins]]
repo = 'Shougo/deoplete.nvim'
if = 'has("nvim")'
on_i = 1
hook_add = '''
    let g:deoplete#enable_at_startup = 1
'''
hook_source = '''
    source ~/.vim/rc/plugins/deoplete.rc.vim
'''

[[plugins]]
repo = 'Shougo/neoinclude.vim'
on_ft = ['c', 'cpp']
depends = ['deoplete.nvim']

[[plugins]]
repo = 'fishbullet/deoplete-ruby'
on_ft = ['ruby']
depends = ['deoplete.nvim']

[[plugins]]
repo = 'zchee/deoplete-jedi'
on_ft = ['python']
depends = ['deoplete.nvim']

[[plugins]]
repo = 'jmcantrell/vim-virtualenv'
on_ft = ['python']

[[plugins]]
repo = 'hynek/vim-python-pep8-indent'
on_ft = ['python']

[[plugins]]
repo = 'roxma/nvim-yarp'

[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'elzr/vim-json'
on_ft = 'json'

[[plugins]]
repo = 'rcmdnk/vim-markdown'
on_ft = ['markdown', 'mkd']

[[plugins]]
repo = 'vim-ruby/vim-ruby'
on_map = '<Plug>'
on_ft = 'ruby'

[[plugins]]
repo = 'jelera/vim-javascript-syntax'
on_ft = 'javascript'

