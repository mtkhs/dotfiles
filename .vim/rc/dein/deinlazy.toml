[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = ['context_filetype.vim']
if = "has('nvim')"
on_event = 'InsertEnter'
hook_source = '''
let g:deoplete#enable_at_startup = 1
"let g:deoplete#auto_complete_delay = 0
"let g:deoplete#keyword_patterns = {}
"let g:deoplete#keyword_patterns._ = '[a-zA-Z_]\k*\(?'
"let g:deoplete#keyword_patterns.tex = '[^\w|\s][a-zA-Z_]\w*'
"let g:deoplete#omni#input_patterns = {}
"let g:deoplete#omni#input_patterns.python = ''
"let g:deoplete#omni#functions = {}
let g:deoplete#enable_camel_case = 1
"let g:deoplete#skip_chars = ['(', ')']

" <TAB>: completion.
inoremap <expr><TAB> pumvisible() ? "\<C-n>" : "\<TAB>"
" <S-TAB>: completion back.
inoremap <expr><S-TAB> pumvisible() ? "\<C-p>" : "\<C-h>"
" <BS>: close popup and delete backword char.
inoremap <expr><BS> pumvisible() ? deoplete#smart_close_popup() . "\<C-h>" : "\<C-h>"
" <ESC>: cancel popup.
inoremap <expr><ESC> pumvisible() ? deoplete#cancel_popup() : "\<ESC>"
" <CR>: close popup and save indent.
inoremap <expr><CR> pumvisible() ? deoplete#close_popup() : "\<CR>"

inoremap <expr><C-l> deoplete#complete_common_string()

inoremap <expr> ' pumvisible() ? deoplete#close_popup() : "'"

set completeopt-=preview
'''

[[plugins]]
repo = 'zchee/deoplete-clang'
if = 'executable("clang")'
on_ft = ['c','cpp', 'cmake']
depends = ['deoplete.nvim']
hook_source = '''
let g:deoplete#sources#clang#libclang_path = '/usr/lib/llvm-6.0/lib/libclang-6.0.so.1'
let g:deoplete#sources#clang#clang_header = '/usr/include/clang'
'''

[[plugins]]
repo = 'zchee/deoplete-jedi'
on_ft = ['python']
depends = ['deoplete.nvim']
hook_source = '''
let g:deoplete#sources#jedi#enable_typeinfo = v:false
let g:deoplete#sources#jedi#ignore_errors = v:true
'''

[[plugins]]
repo = 'zchee/deoplete-zsh'
depends = ['deoplete.nvim']
on_ft = ['zsh', 'sh']

[[plugins]]
repo = 'gko/vim-coloresque'
on_ft = ['css', 'scss', 'html']

[[plugins]]
repo = 'stephpy/vim-yaml'
on_ft = ['yaml']

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = ['toml']

[[plugins]]
repo = 'elzr/vim-json'
on_ft = ['json']
hook_add = '''
" Disable fancy concealing of attribute quotes
let g:vim_json_syntax_conceal = 0
'''

[[plugins]]
repo = 'leafgarland/typescript-vim'
on_ft = ['typescriptreact']

[[plugins]]
repo = 'peitalin/vim-jsx-typescript'
on_ft = ['typescriptreact']

[[plugins]]
repo = 'yuezk/vim-js'
on_ft = ['javascript', 'javascript.jsx']

[[plugins]]
repo = 'maxmellon/vim-jsx-pretty'
on_ft = ['javascript', 'javascript.jsx', 'typescriptreact']

[[plugins]]
repo = 'ericpruitt/tmux.vim'
on_ft = ['tmux']

[[plugins]]
repo = 'rcmdnk/vim-markdown'
on_ft = ['markdown', 'mkd']

[[plugins]]
repo = 'ekalinin/Dockerfile.vim'
on_ft = ['dockerfile']

